{"version":3,"sources":["app.js"],"names":["window","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","setTimeout","startAnimation","W","animloop","canvas","document","getElementById","ctx","getContext","innerWidth","H","innerHeight","width","height","particleCount","particles","minDist","i","push","Particle","paintCanvas","fillStyle","fillRect","x","Math","random","y","vx","vy","radius","draw","beginPath","arc","PI","fill","p","length","update","p2","j","distance","p1","dist","dx","dy","sqrt","strokeStyle","moveTo","lineTo","stroke","closePath","ax","ay","navItems","getElementsByClassName","pages","setPage","el","page","classList","remove","add"],"mappings":"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","file":"app.js","sourcesContent":["// RequestAnimFrame: a browser API for getting smooth animations\nwindow.requestAnimFrame = (function() {\n  return window.requestAnimationFrame ||\n    window.webkitRequestAnimationFrame ||\n    window.mozRequestAnimationFrame ||\n    window.oRequestAnimationFrame ||\n    window.msRequestAnimationFrame ||\n    function(callback) {\n      window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nfunction startAnimation() {\n  if (W < 960) {\n    return false;\n  }\n\n  animloop();\n}\n\n// Initializing the canvas\n// I am using native JS here, but you can use jQuery, \n// Mootools or anything you want\nconst canvas = document.getElementById(\"app-canvas\");\n\n// Initialize the context of the canvas\nconst ctx = canvas.getContext(\"2d\");\n\n// Set the canvas width and height to occupy full window\nconst W = window.innerWidth;\nconst H = window.innerHeight;\ncanvas.width = W;\ncanvas.height = H;\n\n// Some variables for later use\nconst particleCount = 150;\nconst particles = [];\nconst minDist = 70;\n\n// Time to push the particles into an array\nfor (var i = 0; i < particleCount; i++) {\n  particles.push(new Particle());\n}\n\n// Function to paint the canvas black\nfunction paintCanvas() {\n  // Set the fill color to black\n  ctx.fillStyle = \"#515151\";\n\n  // This will create a rectangle of white color from the \n  // top left (0,0) to the bottom right corner (W,H)\n  ctx.fillRect(0, 0, W, H);\n}\n\n// Now the idea is to create some particles that will attract\n// each other when they come close. We will set a minimum\n// distance for it and also draw a line when they come\n// close to each other.\n\n// The attraction can be done by increasing their velocity as \n// they reach closer to each other\n\n// Let's make a function that will act as a class for\n// our particles.\n\nfunction Particle() {\n  // Position them randomly on the canvas\n  // Math.random() generates a random value between 0\n  // and 1 so we will need to multiply that with the\n  // canvas width and height.\n  this.x = Math.random() * W;\n  this.y = Math.random() * H;\n\n  // We would also need some velocity for the particles\n  // so that they can move freely across the space\n  this.vx = -1 + Math.random() * 2;\n  this.vy = -1 + Math.random() * 2;\n\n  // Now the radius of the particles. I want all of \n  // them to be equal in size so no Math.random() here..\n  this.radius = 4;\n\n  // This is the method that will draw the Particle on the\n  // canvas. It is using the basic fillStyle, then we start\n  // the path and after we use the `arc` function to \n  // draw our circle. The `arc` function accepts four\n  // parameters in which first two depicts the position\n  // of the center point of our arc as x and y coordinates.\n  // The third value is for radius, then start angle, \n  // end angle and finally a boolean value which decides\n  // whether the arc is to be drawn in counter clockwise or \n  // in a clockwise direction. False for clockwise.\n  this.draw = function() {\n    ctx.fillStyle = \"white\";\n    ctx.beginPath();\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\n\n    // Fill the color to the arc that we just created\n    ctx.fill();\n  }\n}\n\n// Function to draw everything on the canvas that we'll use when \n// animating the whole scene.\nfunction draw() {\n\n  // Call the paintCanvas function here so that our canvas\n  // will get re-painted in each next frame\n  paintCanvas();\n\n  // Call the function that will draw the balls using a loop\n  var p;\n  for (var i = 0; i < particles.length; i++) {\n    p = particles[i];\n    p.draw();\n  }\n\n  //Finally call the update function\n  update();\n}\n\n// Give every particle some life\nfunction update() {\n\n  // In this function, we are first going to update every\n  // particle's position according to their velocities\n  var p;\n  for (var i = 0; i < particles.length; i++) {\n    p = particles[i];\n\n    // Change the velocities\n    p.x += p.vx;\n    p.y += p.vy\n\n    // We don't want to make the particles leave the\n    // area, so just change their position when they\n    // touch the walls of the window\n    if (p.x + p.radius > W)\n      p.x = p.radius;\n\n    else if (p.x - p.radius < 0) {\n      p.x = W - p.radius;\n    }\n\n    if (p.y + p.radius > H)\n      p.y = p.radius;\n\n    else if (p.y - p.radius < 0) {\n      p.y = H - p.radius;\n    }\n\n    // Now we need to make them attract each other\n    // so first, we'll check the distance between\n    // them and compare it to the minDist we have\n    // already set\n\n    // We will need another loop so that each\n    // particle can be compared to every other particle\n    // except itself\n    var p2;\n    for (var j = i + 1; j < particles.length; j++) {\n      p2 = particles[j];\n      distance(p, p2);\n    }\n\n  }\n}\n\n// Distance calculator between two particles\nfunction distance(p1, p2) {\n  var dist,\n    dx = p1.x - p2.x,\n    dy = p1.y - p2.y;\n\n  dist = Math.sqrt(dx * dx + dy * dy);\n\n  // Draw the line when distance is smaller\n  // then the minimum distance\n  if (dist <= minDist) {\n\n    // Draw the line\n    ctx.beginPath();\n    ctx.strokeStyle = \"rgba(255,255,255,\" + (1.2 - dist / minDist) + \")\";\n    ctx.moveTo(p1.x, p1.y);\n    ctx.lineTo(p2.x, p2.y);\n    ctx.stroke();\n    ctx.closePath();\n\n    // Some acceleration for the partcles \n    // depending upon their distance\n    var ax = dx / 2000,\n      ay = dy / 2000;\n\n    // Apply the acceleration on the particles\n    p1.vx -= ax;\n    p1.vy -= ay;\n\n    p2.vx += ax;\n    p2.vy += ay;\n  }\n}\n\n// Start the main animation loop using requestAnimFrame\nfunction animloop() {\n  draw();\n  requestAnimFrame(animloop);\n}\n\nstartAnimation();\n\nconst navItems = document.getElementsByClassName('app-nav__item');\nconst pages = document.getElementsByClassName('page-content');\n\nwindow.setPage = function(el, page) {\n  for (let i = 0; i < navItems.length; i++) {\n    navItems[i].classList.remove('active');\n  }\n  el.classList.add('active');\n\n  for (let i = 0; i < pages.length; i++) {\n    pages[i].classList.remove('active');\n  }\n  document.getElementById(page).classList.add('active');\n}\n"],"sourceRoot":"/source/"}